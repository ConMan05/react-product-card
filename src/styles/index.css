@charset "UTF-8";
@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,400,700&display=swap");
/*
 ! Note ->  Collect some good and unique colors and then use darken , grayscale etc on them in colors-using 
 !          with senseful names like dark-green , etc-green

hsl -> hue , saturation , lightness
hue means color
Saturation means how much of that color
lightness == brightness
(
  hue = 0 to 360deg (chooses color)
  100% is full saturation, and 0% is a shade of gray
  100% lightness is white, 0% lightness is black, and 50% lightness is “normal”
)
*/
/*
@mixin testing-colors {
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 400px;
  height: 250px;
  margin-bottom: 5px;
}
.aman1,
.aman2 {
  @include testing-colors();
  background: $green1;
}
*/
/*
! Useful functions :- darken , lighten , saturate , desaturate , color.scale , color.adjust , color.mix
! Create Custom functions and mixins in 1-tools folder and just comment those func/mixin names (keeping it handy)
! Create Your Plates(3 to 6 similar colors with diff traits) from choosing required colors from 3-colors.scss
Naming can be :- using-green1 , using-green2, using-red1, using-gray2 ...etc Or just give Useful names like hot-pink, primary-green, brand-color etc..

    two possible ways for themeing ->
    1st use if condition and import required colors-using file
    2nd use advance technique like lighten , darken , hue etc

*/
/*
@mixin gradient-green {
  @include linear-gradient($primary-green, $blue);
}

@mixin gradient-orange {
  @include linear-gradient($primary-yellow, $orange);
}

*/
/*
  ! Create gradients here for your site

*/
/* testing

body {
  // pass it with variable name if you want to use just that one
  @include getFont();
}

*/
/*
  ! Note :- Can use variable Fonts + if possible then import fonts with conditions like if body-font == ThisFont 
  !         then only import
*/
/*
  !default
  @use

*/
/* Returns default space if no argument is passed else default space + argument */
/*
! ORIGNIAL  :- normalize.css v8.0.1 | github.com/necolas/normalize.css 
! NEW       :- normal.css  | github.com/aman-atg/normal.css
*/
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
     ========================================================================== */
body {
  margin: 0;
}

/**
   * Render the `main` element consistently in IE.
   */
main {
  display: block;
}

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
     ========================================================================== */
/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Forms
     ========================================================================== */
/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
   * Remove the inner border and padding in Firefox.
   */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
   * Restore the focus styles unset by the previous rule.
   */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

iframe,
object,
embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

a {
  text-decoration: none;
  color: inherit;
}

li {
  margin: 0;
  padding: 0;
  list-style: none;
}

button {
  background: white;
  border: none;
}

/*
  .btn {
    @include btn-colored(red);
  }
  */
.col-1 {
  flex: 0 0 auto;
  width: 8.3333333333%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-2 {
  flex: 0 0 auto;
  width: 16.6666666667%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-3 {
  flex: 0 0 auto;
  width: 25%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-4 {
  flex: 0 0 auto;
  width: 33.3333333333%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-5 {
  flex: 0 0 auto;
  width: 41.6666666667%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-6 {
  flex: 0 0 auto;
  width: 50%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-7 {
  flex: 0 0 auto;
  width: 58.3333333333%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-8 {
  flex: 0 0 auto;
  width: 66.6666666667%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-9 {
  flex: 0 0 auto;
  width: 75%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-10 {
  flex: 0 0 auto;
  width: 83.3333333333%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-11 {
  flex: 0 0 auto;
  width: 91.6666666667%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.col-12 {
  flex: 0 0 auto;
  width: 100%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.m-1 {
  margin: 0.75rem;
}

.p-1 {
  padding: 0.75rem;
}

.m-2 {
  margin: 1.5rem;
}

.p-2 {
  padding: 1.5rem;
}

.m-3 {
  margin: 2.25rem;
}

.p-3 {
  padding: 2.25rem;
}

.m-4 {
  margin: 3rem;
}

.p-4 {
  padding: 3rem;
}

.m-5 {
  margin: 3.75rem;
}

.p-5 {
  padding: 3.75rem;
}

.no-space {
  margin-right: 0;
  margin-left: 0;
}
.no-space > .col,
.no-space > [class*=col-] {
  padding-right: 0;
  padding-left: 0;
}

.card-no-footer .card-img img {
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}

.card-no-header .card-img img {
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.card-hover {
  transition: all 0.3s;
}
.card-hover:hover {
  box-shadow: 0px 11px 16px 0px rgba(5, 5, 5, 0.23);
  transition: all 0.3s;
}

.card {
  height: 250px;
  color: #ffffff;
  background: linear-gradient(135deg, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.3) 50%), url("https://i.picsum.photos/id/0/300/250.jpg");
  background-size: cover;
  position: relative;
  width: 400px;
}

.btn {
  cursor: pointer;
  display: inline-block;
  font-family: "Open Sans";
  font-weight: 700;
  color: white;
  border-radius: 3px;
  padding: 10px 15px;
  background-color: #d4312d;
}
.btn:hover {
  background-color: red;
}

.btn-2 {
  cursor: pointer;
  display: inline-block;
  font-family: "Times New Roman";
  font-weight: 200;
  border: 1px solid #808080;
  border-radius: 50px;
  padding: 5px 15px;
  transition: all 0.5s;
}
.btn-2:hover {
  box-shadow: 2px 5px 8px #909393;
}

.navbar {
  height: 60px;
  background: #242526;
  padding: 0 1rem;
  border-bottom: 1px solid #484a4d;
}
.navbar_nav {
  max-width: 100%;
  height: 100%;
  display: flex;
  justify-content: flex-end;
}
.navbar_nav .nav-item {
  width: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.navbar_nav .nav-item .dropdown {
  position: absolute;
  top: 58px;
  width: 300px;
  transform: translateX(-45%);
  background-color: #242526;
  border: 1px solid #484a4d;
  border-radius: 8px;
  padding: 1rem;
  overflow: hidden;
  transition: height 400ms ease;
}
.navbar_nav .nav-item .icon-right {
  margin-left: auto;
}
.navbar_nav .nav-item .menu-item {
  height: 50px;
  display: flex;
  align-items: center;
  border-radius: 8px;
  transition: background 400ms;
  padding: 0.5rem;
}
.navbar_nav .nav-item .menu-item:hover {
  background-color: #525357;
}
.navbar_nav .menu {
  width: 270px;
}
.navbar_nav .icon-button {
  width: 30px;
  height: 30px;
  background-color: #484a4d;
  border-radius: 50%;
  padding: 5px;
  margin: 2px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: filter 300ms;
}
.navbar_nav .icon-button svg {
  fill: #dadce1;
  width: 20px;
  height: 20px;
}
.navbar_nav .icon-button:hover {
  filter: brightness(1.2);
}

/* CSSTransition classes  */
.menu-primary-enter {
  position: absolute;
  transform: translateX(-110%);
}

.menu-primary-enter-active {
  transform: translateX(0%);
  transition: all 400ms ease;
}

.menu-primary-exit {
  position: absolute;
}

.menu-primary-exit-active {
  transform: translateX(-110%);
  transition: all 400ms ease;
}

.menu-secondary-enter {
  transform: translateX(110%);
}

.menu-secondary-enter-active {
  transform: translateX(0%);
  transition: all 400ms ease;
}

.menu-secondary-exit-active {
  transform: translateX(110%);
  transition: all 400ms ease;
}

.Test {
  margin: 0 auto;
  padding: 0 2.25rem;
  max-width: 1024px;
}
.Test .row1 {
  background-color: darkgreen;
  display: flex;
  flex-wrap: wrap;
  margin-left: -0.75rem;
  margin-right: -0.75rem;
  margin-bottom: 20px;
}
.Test .row1 .col {
  flex: 0 0 auto;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
@media only screen and (min-width : 375px) {
  .Test .row1 .col {
    width: 100%;
  }
}
@media only screen and (min-width : 1024px) {
  .Test .row1 .col {
    width: 50%;
  }
}
@media only screen and (min-width : 1280px) {
  .Test .row1 .col {
    width: 33.3333333333%;
  }
}
.Test .row2 {
  display: flex;
  flex-wrap: wrap;
  margin-left: -0.75rem;
  margin-right: -0.75rem;
}
.Test .row2 .col {
  background-color: cadetblue;
  flex: 0 0 auto;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
@media only screen and (min-width : 375px) {
  .Test .row2 .col {
    width: 100%;
  }
}
@media only screen and (min-width : 768px) {
  .Test .row2 .col {
    width: 50%;
  }
}
@media only screen and (min-width : 1024px) {
  .Test .row2 .col {
    width: 33.3333333333%;
  }
}
@media only screen and (min-width : 1280px) {
  .Test .row2 .col {
    width: 33.3333333333%;
  }
}

.App {
  height: 100vh;
}

:root {
  font-size: 16px;
  font-family: "Open Sans";
}

body {
  color: black;
  background: white;
  margin: 0;
  padding: 0;
}

main {
  margin-left: 5rem;
  overflow: hidden;
}
@media only screen and (max-width : 768px) {
  main {
    margin: 0 !important;
  }
}

body::-webkit-scrollbar {
  width: 0.25rem;
}

body::-webkit-scrollbar-track {
  background: #1e1e24;
}

body::-webkit-slider-thumb {
  background: #6649b8;
}

.NavbarColumnRow main {
  margin-left: 5rem;
  padding: 1rem;
  padding-bottom: 5rem;
}
.NavbarColumnRow .navbar {
  padding: 0;
  position: fixed;
  background-color: #23232e;
  transition: width 300ms ease;
}
.NavbarColumnRow .navbar .navbar-nav {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
}
.NavbarColumnRow .navbar .navbar-nav .logo {
  font-size: 20px;
  font-weight: bold;
  text-transform: uppercase;
  margin-bottom: 1rem;
  text-align: center;
  color: #ececec;
  background: #141418;
  font-style: 1.5rem;
  letter-spacing: 0.3ch;
  width: 100%;
}
.NavbarColumnRow .navbar .navbar-nav .logo svg {
  transform: rotate(0deg);
  transition: transform 300ms;
}
.NavbarColumnRow .navbar .navbar-nav .nav-item {
  width: 100%;
}
.NavbarColumnRow .navbar .navbar-nav .nav-item:last-child {
  margin-top: auto;
}
.NavbarColumnRow .navbar .navbar-nav .nav-item .nav-link {
  display: flex;
  align-items: center;
  height: 5rem;
  color: #b6b6b6;
  text-decoration: none;
  filter: grayscale(100%) opacity(0.7);
  transition: all 300ms;
}
.NavbarColumnRow .navbar .navbar-nav .nav-item .nav-link:hover {
  filter: grayscale(0%) opacity(1);
  background: #141418;
  color: #ececec;
}
.NavbarColumnRow .navbar .navbar-nav .nav-item .nav-link .link-text {
  display: none;
  margin-left: 1rem;
}
.NavbarColumnRow .navbar:hover .logo svg {
  transform: rotate(-180deg);
}
@media only screen and (min-width : 768px) {
  .NavbarColumnRow .navbar {
    width: 5rem;
    height: 100vh;
  }
  .NavbarColumnRow .navbar:hover {
    width: 16rem;
  }
  .NavbarColumnRow .navbar:hover .logo {
    padding-left: 40px;
  }
  .NavbarColumnRow .navbar:hover .link-text {
    display: inline !important;
    transition: opacity 300ms;
  }
}
@media only screen and (max-width : 768px) {
  .NavbarColumnRow .navbar {
    bottom: 0;
    width: 100vw;
    height: 5rem;
  }
  .NavbarColumnRow .navbar .logo {
    display: none;
  }
  .NavbarColumnRow .navbar .navbar-nav {
    flex-direction: row;
  }
  .NavbarColumnRow .navbar .navbar-nav .nav-link {
    justify-content: center;
  }
}
.NavbarColumnRow .fa-primary {
  color: #ff7eee;
}
.NavbarColumnRow .fa-secondary {
  color: #df49a6;
}
.NavbarColumnRow .fa-primary,
.NavbarColumnRow .fa-secondary {
  transition: 300ms;
}
.NavbarColumnRow svg {
  width: 2rem;
  min-width: 2rem;
  margin: 0 1.5rem;
}
.NavbarColumnRow .hide {
  display: none;
}

.ProfileManager {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  background: green;
}
.ProfileManager .card-atg {
  background: gray;
}

/*





.animateThese {
  margin-top: 20px;
  margin-bottom: 50px;
  display: flex;
  justify-content: center;
  gap: 10px;
  .newBox,
  .box,
  .box2 {
    width: 50px;
    height: 50px;
    background: green;
  }
  .box2 {
    background: purple;
  }
  .newBox {
    background: red;
  }
}
*/
/*


    Settings    – used with preprocessors and contain font, colors definitions, etc.
    Tools       – globally used mixins and functions. It’s important not to output any CSS in the first 2 layers.
    Generic     – reset and/or normalize styles, box-sizing definition, etc. This is the first layer which generates actual CSS.
    Elements    – styling for bare HTML elements (like H1, A, etc.). These come with default styling from the browser so we can redefine them here.
    Objects     – class-based selectors which define undecorated design patterns, for example media object known from OOCSS
    Components  – specific UI components. This is where the majority of our work takes place and our UI components are often composed of Objects and Components
    Utilities   – utilities and helper classes with ability to override anything which goes before in the triangle, eg. hide helper class


*/
/*

    Settings    – Variables, Imports
    Tools       – 
    Generic     – 
    Elements    – 
    Objects     – Layout(Grid,Flex,Media,UtilitiesForLayout) , 
    Components  – 
    Utilities   – 

*/

/*# sourceMappingURL=index.css.map */
